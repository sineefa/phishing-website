{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\demonstration\\\\phishing-website\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [whoisInfo, setWhoisInfo] = useState(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setResult(\"\");\n    setError(\"\");\n    setWhoisInfo(null);\n    setLoading(true);\n    fetch(\"http://localhost:5000/classify\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        url\n      })\n    }).then(response => response.json()).then(data => {\n      setResult(data.result || \"Unknown result\"); // Display the classification result or \"Unknown result\"\n      setWhoisInfo(data.whoisInfo); // Set WHOIS information regardless of classification outcome\n      setLoading(false);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      setError(\"Error in processing request\");\n      setLoading(false);\n    });\n  };\n  const renderWhoisInfo = () => {\n    if (!whoisInfo) return null;\n\n    // Check and log the whoisInfo structure to inspect domainName directly\n    console.log(\"WHOIS Info Object:\", whoisInfo);\n\n    // Destructure fields and verify types\n    let {\n      domainName,\n      creationDate,\n      registryExpiryDate\n    } = whoisInfo;\n\n    // Debug log to see the exact value of domainName\n    console.log(\"Raw Domain Name Value:\", domainName);\n\n    // If domainName is not a string, attempt to convert it\n    if (domainName && typeof domainName !== \"string\") {\n      domainName = String(domainName);\n      console.warn(\"Converted domainName to string:\", domainName);\n    }\n\n    // Use trim only if domainName is a string and apply it cautiously\n    if (domainName && typeof domainName === \"string\") {\n      // Only split if the domain has commas, and trim after verifying it's necessary\n      if (domainName.includes(\",\")) {\n        domainName = domainName.split(\",\")[0].trim();\n      } else {\n        domainName = domainName.trim();\n      }\n    } else {\n      console.warn(\"Domain name is either missing or not in the expected format.\");\n      domainName = null; // Explicitly set domainName to null if extraction fails\n    }\n\n    // Verify values for creationDate and registryExpiryDate\n    if (creationDate && typeof creationDate === \"string\") {\n      creationDate = creationDate.split(\",\")[0].trim();\n    }\n    if (registryExpiryDate && typeof registryExpiryDate === \"string\") {\n      registryExpiryDate = registryExpiryDate.split(\",\")[0].trim();\n    }\n\n    // Additional logging to confirm extraction\n    console.log(\"Extracted Domain Name:\", domainName);\n    console.log(\"Creation Date:\", creationDate);\n    console.log(\"Registry Expiry Date:\", registryExpiryDate);\n\n    // Determine if the domain is alive by comparing todayâ€™s date to registryExpiryDate\n    const currentDate = new Date();\n    const expiryDate = registryExpiryDate ? new Date(registryExpiryDate) : null;\n\n    // Check the status based on the availability of domain name and expiry date\n    const isAlive = domainName && expiryDate && expiryDate > currentDate;\n    if (isAlive) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whois-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"WHOIS Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domain Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), \" \", domainName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Creation Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), \" \", creationDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Registry Expiry Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), \" \", registryExpiryDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: \"bold\",\n            color: \"green\"\n          },\n          children: \"URL is Alive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whois-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"#FFD700\",\n            marginBottom: \"10px\"\n          },\n          children: \"WHOIS Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Domain Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), \" \", domainName || \"Not available\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Creation Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), \" \", creationDate || \"Not available\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Registry Expiry Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), \" \", registryExpiryDate || \"Not available\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: \"bold\",\n            color: \"red\"\n          },\n          children: \"URL is NOT alive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-shield-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), \" Phishing URL Classifier\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter URL\",\n          value: url,\n          onChange: e => setUrl(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: \"Detect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), \"Loading...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }, this), result && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: result === \"Malicious URL (Phishing)\" ? \"phishing-result\" : \"not-phishing-result\",\n        children: [result === \"Malicious URL (Phishing)\" && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-exclamation-triangle blinking-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 55\n        }, this), \"Result: \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), renderWhoisInfo()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: \"University of Ruhuna | Faculty of Engineering | Undergraduate Project | Group 06\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CqvsSvz5/zb+B9bj49TQm8hXdVw=\");\n_c = App;\nexport default App;\n\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n// function App() {\n//   const [url, setUrl] = useState(\"\");\n//   const [result, setResult] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const [whoisInfo, setWhoisInfo] = useState(null);\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     setResult(\"\");\n//     setError(\"\");\n//     setWhoisInfo(null);\n//     setLoading(true);\n\n//     fetch(\"http://localhost:5000/classify\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ url }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setResult(data.result || \"Unknown result\"); // Display the classification result or \"Unknown result\"\n//         setWhoisInfo(data.whoisInfo); // Set WHOIS information regardless of classification outcome\n//         setLoading(false);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error:\", error);\n//         setError(\"Error in processing request\");\n//         setLoading(false);\n//       });\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>\n//           <i className=\"fas fa-shield-alt\"></i> Phishing URL Classifier\n//         </h1>\n//         <form onSubmit={handleSubmit}>\n//           <input type=\"text\" placeholder=\"Enter URL\" value={url} onChange={(e) => setUrl(e.target.value)} />\n//           <button type=\"submit\" disabled={loading}>\n//             Detect\n//           </button>\n//         </form>\n\n//         {loading && (\n//           <div className=\"loading-message\">\n//             <div className=\"spinner\"></div>\n//             Loading...\n//           </div>\n//         )}\n\n//         {error && <p className=\"error-message\">{error}</p>}\n\n//         {result && (\n//           <p className={result === \"Malicious URL (Phishing)\" ? \"phishing-result\" : \"not-phishing-result\"}>\n//             {result === \"Malicious URL (Phishing)\" && <i className=\"fas fa-exclamation-triangle blinking-icon\"></i>}\n//             Result: {result}\n//           </p>\n//         )}\n\n//         {whoisInfo && (\n//           <div className=\"whois-info\">\n//             <h3>WHOIS Information</h3>\n//             <p>\n//               <strong>Domain Name:</strong> {whoisInfo.domainName}\n//             </p>\n//             <p>\n//               <strong>Creation Date:</strong> {whoisInfo.creationDate}\n//             </p>\n//             <p>\n//               <strong>Registry Expiry Date:</strong> {whoisInfo.registryExpiryDate}\n//             </p>\n//           </div>\n//         )}\n//       </header>\n\n//       <div className=\"footer\">University of Ruhuna | Faculty of Engineering | Undergraduate Project | Group 06</div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n// function App() {\n//   const [url, setUrl] = useState(\"\");\n//   const [result, setResult] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const [whoisInfo, setWhoisInfo] = useState(null); // New state for WHOIS information\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     setResult(\"\");\n//     setError(\"\");\n//     setWhoisInfo(null); // Reset WHOIS info on each new request\n//     setLoading(true);\n\n//     fetch(\"http://localhost:5000/classify\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ url }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setResult(data.result);\n//         setWhoisInfo(data.whoisInfo); // Set WHOIS info from backend response\n//         setLoading(false);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error:\", error);\n//         setError(\"Error in classification\");\n//         setLoading(false);\n//       });\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>\n//           <i className=\"fas fa-shield-alt\"></i> Phishing URL Classifier\n//         </h1>\n//         <form onSubmit={handleSubmit}>\n//           <input type=\"text\" placeholder=\"Enter URL\" value={url} onChange={(e) => setUrl(e.target.value)} />\n//           <button type=\"submit\" disabled={loading}>\n//             Detect\n//           </button>\n//         </form>\n\n//         {loading && (\n//           <div className=\"loading-message\">\n//             <div className=\"spinner\"></div>\n//             Loading...\n//           </div>\n//         )}\n\n//         {error && <p className=\"error-message\">{error}</p>}\n\n//         {result && (\n//           <p className={result === \"Malicious URL (Phishing)\" ? \"phishing-result\" : \"not-phishing-result\"}>\n//             {result === \"Malicious URL (Phishing)\" && <i className=\"fas fa-exclamation-triangle blinking-icon\"></i>}\n//             Result: {result}\n//           </p>\n//         )}\n\n//         {whoisInfo && (\n//           <div className=\"whois-info\">\n//             <h3>WHOIS Information:</h3>\n//             <p>\n//               <strong>Domain Name:</strong> {whoisInfo.domainName}\n//             </p>\n//             <p>\n//               <strong>Creation Date:</strong> {whoisInfo.creationDate}\n//             </p>\n//             <p>\n//               <strong>Registry Expiry Date:</strong> {whoisInfo.registryExpiryDate}\n//             </p>\n//           </div>\n//         )}\n//       </header>\n\n//       <div className=\"footer\">University of Ruhuna | Faculty of Engineering | Undergraduate Project | Group 06</div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// //////////////////with loading spinner////////////////\n\n// import React, { useState } from \"react\";\n// import \"./App.css\";\n// import \"@fortawesome/fontawesome-free/css/all.min.css\"; // Import FontAwesome\n\n// function App() {\n//   const [url, setUrl] = useState(\"\");\n//   const [result, setResult] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n//   const [loading, setLoading] = useState(false); // New loading state\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     // Reset the result and error states\n//     setResult(\"\");\n//     setError(\"\");\n//     setLoading(true); // Set loading to true before the fetch\n\n//     // Send the input to the backend\n//     fetch(\"http://localhost:5000/classify\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ url }),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setResult(data.result); // Display the result from backend (Malicious or Benign)\n//         setLoading(false); // Set loading to false after the response\n//       })\n//       .catch((error) => {\n//         console.error(\"Error:\", error);\n//         setError(\"Error in classification\"); // Handle error case\n//         setLoading(false); // Set loading to false on error\n//       });\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <h1>\n//           <i className=\"fas fa-shield-alt\"></i> Phishing URL Classifier\n//         </h1>\n//         <form onSubmit={handleSubmit}>\n//           <input type=\"text\" placeholder=\"Enter URL\" value={url} onChange={(e) => setUrl(e.target.value)} />\n//           <button type=\"submit\" disabled={loading}>\n//             Detect\n//           </button>\n//         </form>\n\n//         {loading && (\n//           <div className=\"loading-message\">\n//             <div className=\"spinner\"></div> {/* Show the spinner */}\n//             Loading...\n//           </div>\n//         )}\n\n//         {error && <p className=\"error-message\">{error}</p>}\n\n//         {result && (\n//           <p className={result === \"Malicious URL (Phishing)\" ? \"phishing-result\" : \"not-phishing-result\"}>\n//             {result === \"Malicious URL (Phishing)\" && <i className=\"fas fa-exclamation-triangle blinking-icon\"></i>}\n//             Result: {result}\n//           </p>\n//         )}\n//       </header>\n\n//       <div className=\"footer\">University of Ruhuna | Faculty of Engineering | Undergraduate Project | Group 06</div>\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","url","setUrl","result","setResult","error","setError","loading","setLoading","whoisInfo","setWhoisInfo","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","console","renderWhoisInfo","log","domainName","creationDate","registryExpiryDate","String","warn","includes","split","trim","currentDate","Date","expiryDate","isAlive","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontWeight","color","marginBottom","onSubmit","type","placeholder","value","onChange","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/demonstration/phishing-website/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\nfunction App() {\r\n  const [url, setUrl] = useState(\"\");\r\n  const [result, setResult] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [whoisInfo, setWhoisInfo] = useState(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setResult(\"\");\r\n    setError(\"\");\r\n    setWhoisInfo(null);\r\n    setLoading(true);\r\n\r\n    fetch(\"http://localhost:5000/classify\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ url }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setResult(data.result || \"Unknown result\"); // Display the classification result or \"Unknown result\"\r\n        setWhoisInfo(data.whoisInfo); // Set WHOIS information regardless of classification outcome\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        setError(\"Error in processing request\");\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const renderWhoisInfo = () => {\r\n    if (!whoisInfo) return null;\r\n\r\n    // Check and log the whoisInfo structure to inspect domainName directly\r\n    console.log(\"WHOIS Info Object:\", whoisInfo);\r\n\r\n    // Destructure fields and verify types\r\n    let { domainName, creationDate, registryExpiryDate } = whoisInfo;\r\n\r\n    // Debug log to see the exact value of domainName\r\n    console.log(\"Raw Domain Name Value:\", domainName);\r\n\r\n    // If domainName is not a string, attempt to convert it\r\n    if (domainName && typeof domainName !== \"string\") {\r\n      domainName = String(domainName);\r\n      console.warn(\"Converted domainName to string:\", domainName);\r\n    }\r\n\r\n    // Use trim only if domainName is a string and apply it cautiously\r\n    if (domainName && typeof domainName === \"string\") {\r\n      // Only split if the domain has commas, and trim after verifying it's necessary\r\n      if (domainName.includes(\",\")) {\r\n        domainName = domainName.split(\",\")[0].trim();\r\n      } else {\r\n        domainName = domainName.trim();\r\n      }\r\n    } else {\r\n      console.warn(\"Domain name is either missing or not in the expected format.\");\r\n      domainName = null; // Explicitly set domainName to null if extraction fails\r\n    }\r\n\r\n    // Verify values for creationDate and registryExpiryDate\r\n    if (creationDate && typeof creationDate === \"string\") {\r\n      creationDate = creationDate.split(\",\")[0].trim();\r\n    }\r\n    if (registryExpiryDate && typeof registryExpiryDate === \"string\") {\r\n      registryExpiryDate = registryExpiryDate.split(\",\")[0].trim();\r\n    }\r\n\r\n    // Additional logging to confirm extraction\r\n    console.log(\"Extracted Domain Name:\", domainName);\r\n    console.log(\"Creation Date:\", creationDate);\r\n    console.log(\"Registry Expiry Date:\", registryExpiryDate);\r\n\r\n    // Determine if the domain is alive by comparing todayâ€™s date to registryExpiryDate\r\n    const currentDate = new Date();\r\n    const expiryDate = registryExpiryDate ? new Date(registryExpiryDate) : null;\r\n\r\n    // Check the status based on the availability of domain name and expiry date\r\n    const isAlive = domainName && expiryDate && expiryDate > currentDate;\r\n\r\n    if (isAlive) {\r\n      return (\r\n        <div className=\"whois-info\">\r\n          <h3>WHOIS Information</h3>\r\n          <p>\r\n            <strong>Domain Name:</strong> {domainName}\r\n          </p>\r\n          <p>\r\n            <strong>Creation Date:</strong> {creationDate}\r\n          </p>\r\n          <p>\r\n            <strong>Registry Expiry Date:</strong> {registryExpiryDate}\r\n          </p>\r\n          <p style={{ fontWeight: \"bold\", color: \"green\" }}>URL is Alive</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"whois-info\">\r\n          <h3 style={{ color: \"#FFD700\", marginBottom: \"10px\" }}>WHOIS Information</h3>\r\n          <p>\r\n            <strong>Domain Name:</strong> {domainName || \"Not available\"}\r\n          </p>\r\n          <p>\r\n            <strong>Creation Date:</strong> {creationDate || \"Not available\"}\r\n          </p>\r\n          <p>\r\n            <strong>Registry Expiry Date:</strong> {registryExpiryDate || \"Not available\"}\r\n          </p>\r\n          <p style={{ fontWeight: \"bold\", color: \"red\" }}>URL is NOT alive</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>\r\n          <i className=\"fas fa-shield-alt\"></i> Phishing URL Classifier\r\n        </h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input type=\"text\" placeholder=\"Enter URL\" value={url} onChange={(e) => setUrl(e.target.value)} />\r\n          <button type=\"submit\" disabled={loading}>\r\n            Detect\r\n          </button>\r\n        </form>\r\n\r\n        {loading && (\r\n          <div className=\"loading-message\">\r\n            <div className=\"spinner\"></div>\r\n            Loading...\r\n          </div>\r\n        )}\r\n\r\n        {error && <p className=\"error-message\">{error}</p>}\r\n\r\n        {result && (\r\n          <p className={result === \"Malicious URL (Phishing)\" ? \"phishing-result\" : \"not-phishing-result\"}>\r\n            {result === \"Malicious URL (Phishing)\" && <i className=\"fas fa-exclamation-triangle blinking-icon\"></i>}\r\n            Result: {result}\r\n          </p>\r\n        )}\r\n\r\n        {renderWhoisInfo()}\r\n      </header>\r\n\r\n      <div className=\"footer\">University of Ruhuna | Faculty of Engineering | Undergraduate Project | Group 06</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// import React, { useState } from \"react\";\r\n// import \"./App.css\";\r\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\n// function App() {\r\n//   const [url, setUrl] = useState(\"\");\r\n//   const [result, setResult] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [whoisInfo, setWhoisInfo] = useState(null);\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     setResult(\"\");\r\n//     setError(\"\");\r\n//     setWhoisInfo(null);\r\n//     setLoading(true);\r\n\r\n//     fetch(\"http://localhost:5000/classify\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ url }),\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setResult(data.result || \"Unknown result\"); // Display the classification result or \"Unknown result\"\r\n//         setWhoisInfo(data.whoisInfo); // Set WHOIS information regardless of classification outcome\r\n//         setLoading(false);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error:\", error);\r\n//         setError(\"Error in processing request\");\r\n//         setLoading(false);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <h1>\r\n//           <i className=\"fas fa-shield-alt\"></i> Phishing URL Classifier\r\n//         </h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <input type=\"text\" placeholder=\"Enter URL\" value={url} onChange={(e) => setUrl(e.target.value)} />\r\n//           <button type=\"submit\" disabled={loading}>\r\n//             Detect\r\n//           </button>\r\n//         </form>\r\n\r\n//         {loading && (\r\n//           <div className=\"loading-message\">\r\n//             <div className=\"spinner\"></div>\r\n//             Loading...\r\n//           </div>\r\n//         )}\r\n\r\n//         {error && <p className=\"error-message\">{error}</p>}\r\n\r\n//         {result && (\r\n//           <p className={result === \"Malicious URL (Phishing)\" ? \"phishing-result\" : \"not-phishing-result\"}>\r\n//             {result === \"Malicious URL (Phishing)\" && <i className=\"fas fa-exclamation-triangle blinking-icon\"></i>}\r\n//             Result: {result}\r\n//           </p>\r\n//         )}\r\n\r\n//         {whoisInfo && (\r\n//           <div className=\"whois-info\">\r\n//             <h3>WHOIS Information</h3>\r\n//             <p>\r\n//               <strong>Domain Name:</strong> {whoisInfo.domainName}\r\n//             </p>\r\n//             <p>\r\n//               <strong>Creation Date:</strong> {whoisInfo.creationDate}\r\n//             </p>\r\n//             <p>\r\n//               <strong>Registry Expiry Date:</strong> {whoisInfo.registryExpiryDate}\r\n//             </p>\r\n//           </div>\r\n//         )}\r\n//       </header>\r\n\r\n//       <div className=\"footer\">University of Ruhuna | Faculty of Engineering | Undergraduate Project | Group 06</div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n// import React, { useState } from \"react\";\r\n// import \"./App.css\";\r\n// import \"@fortawesome/fontawesome-free/css/all.min.css\";\r\n\r\n// function App() {\r\n//   const [url, setUrl] = useState(\"\");\r\n//   const [result, setResult] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [whoisInfo, setWhoisInfo] = useState(null); // New state for WHOIS information\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     setResult(\"\");\r\n//     setError(\"\");\r\n//     setWhoisInfo(null); // Reset WHOIS info on each new request\r\n//     setLoading(true);\r\n\r\n//     fetch(\"http://localhost:5000/classify\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ url }),\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setResult(data.result);\r\n//         setWhoisInfo(data.whoisInfo); // Set WHOIS info from backend response\r\n//         setLoading(false);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error:\", error);\r\n//         setError(\"Error in classification\");\r\n//         setLoading(false);\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <h1>\r\n//           <i className=\"fas fa-shield-alt\"></i> Phishing URL Classifier\r\n//         </h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <input type=\"text\" placeholder=\"Enter URL\" value={url} onChange={(e) => setUrl(e.target.value)} />\r\n//           <button type=\"submit\" disabled={loading}>\r\n//             Detect\r\n//           </button>\r\n//         </form>\r\n\r\n//         {loading && (\r\n//           <div className=\"loading-message\">\r\n//             <div className=\"spinner\"></div>\r\n//             Loading...\r\n//           </div>\r\n//         )}\r\n\r\n//         {error && <p className=\"error-message\">{error}</p>}\r\n\r\n//         {result && (\r\n//           <p className={result === \"Malicious URL (Phishing)\" ? \"phishing-result\" : \"not-phishing-result\"}>\r\n//             {result === \"Malicious URL (Phishing)\" && <i className=\"fas fa-exclamation-triangle blinking-icon\"></i>}\r\n//             Result: {result}\r\n//           </p>\r\n//         )}\r\n\r\n//         {whoisInfo && (\r\n//           <div className=\"whois-info\">\r\n//             <h3>WHOIS Information:</h3>\r\n//             <p>\r\n//               <strong>Domain Name:</strong> {whoisInfo.domainName}\r\n//             </p>\r\n//             <p>\r\n//               <strong>Creation Date:</strong> {whoisInfo.creationDate}\r\n//             </p>\r\n//             <p>\r\n//               <strong>Registry Expiry Date:</strong> {whoisInfo.registryExpiryDate}\r\n//             </p>\r\n//           </div>\r\n//         )}\r\n//       </header>\r\n\r\n//       <div className=\"footer\">University of Ruhuna | Faculty of Engineering | Undergraduate Project | Group 06</div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n// //////////////////with loading spinner////////////////\r\n\r\n// import React, { useState } from \"react\";\r\n// import \"./App.css\";\r\n// import \"@fortawesome/fontawesome-free/css/all.min.css\"; // Import FontAwesome\r\n\r\n// function App() {\r\n//   const [url, setUrl] = useState(\"\");\r\n//   const [result, setResult] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false); // New loading state\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // Reset the result and error states\r\n//     setResult(\"\");\r\n//     setError(\"\");\r\n//     setLoading(true); // Set loading to true before the fetch\r\n\r\n//     // Send the input to the backend\r\n//     fetch(\"http://localhost:5000/classify\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ url }),\r\n//     })\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setResult(data.result); // Display the result from backend (Malicious or Benign)\r\n//         setLoading(false); // Set loading to false after the response\r\n//       })\r\n//       .catch((error) => {\r\n//         console.error(\"Error:\", error);\r\n//         setError(\"Error in classification\"); // Handle error case\r\n//         setLoading(false); // Set loading to false on error\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <header className=\"App-header\">\r\n//         <h1>\r\n//           <i className=\"fas fa-shield-alt\"></i> Phishing URL Classifier\r\n//         </h1>\r\n//         <form onSubmit={handleSubmit}>\r\n//           <input type=\"text\" placeholder=\"Enter URL\" value={url} onChange={(e) => setUrl(e.target.value)} />\r\n//           <button type=\"submit\" disabled={loading}>\r\n//             Detect\r\n//           </button>\r\n//         </form>\r\n\r\n//         {loading && (\r\n//           <div className=\"loading-message\">\r\n//             <div className=\"spinner\"></div> {/* Show the spinner */}\r\n//             Loading...\r\n//           </div>\r\n//         )}\r\n\r\n//         {error && <p className=\"error-message\">{error}</p>}\r\n\r\n//         {result && (\r\n//           <p className={result === \"Malicious URL (Phishing)\" ? \"phishing-result\" : \"not-phishing-result\"}>\r\n//             {result === \"Malicious URL (Phishing)\" && <i className=\"fas fa-exclamation-triangle blinking-icon\"></i>}\r\n//             Result: {result}\r\n//           </p>\r\n//         )}\r\n//       </header>\r\n\r\n//       <div className=\"footer\">University of Ruhuna | Faculty of Engineering | Undergraduate Project | Group 06</div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}